# Generated by Django 5.2.3 on 2025-07-14 11:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('bill_url', models.FileField(blank=True, null=True, upload_to='bills')),
                ('comprensive', models.CharField(choices=[('Comprensive', 'Comprensive'), ('Non-Comprensive', 'Non-Comprensive')], default='Comprensive', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('price', models.PositiveIntegerField(default=0)),
                ('third_party_worker_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_count', models.PositiveIntegerField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('GPay', 'GPay'), ('Cheque', 'Cheque')], max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_customers', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACRequest',
            fields=[
                ('requestform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_request.requestform')),
                ('ac_type', models.CharField(choices=[('SAC', 'Split AC'), ('WAC', 'Window AC')], max_length=50)),
                ('product_brand', models.CharField(choices=[('Voltas', 'Voltas'), ('LG', 'LG'), ('Daikin', 'Daikin'), ('Samsung', 'Samsung'), ('Hitachi', 'Hitachi')], max_length=100)),
                ('amc_years', models.PositiveIntegerField(choices=[(1, '1 Year'), (3, '3 Year')])),
            ],
            options={
                'abstract': False,
            },
            bases=('service_request.requestform',),
        ),
        migrations.CreateModel(
            name='ChimneyHobRequest',
            fields=[
                ('requestform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_request.requestform')),
                ('device_type', models.CharField(choices=[('Chimney', 'Chimney'), ('Hob+Chimney', 'Hob + Chimney')], max_length=20)),
                ('product_brand', models.CharField(choices=[('Elica', 'Elica'), ('Faber', 'Faber'), ('Hindware', 'Hindware'), ('Glen', 'Glen'), ('Bosch', 'Bosch')], max_length=100)),
                ('amc_years', models.PositiveIntegerField(choices=[(1, '1 Year'), (3, '3 Year')])),
            ],
            options={
                'abstract': False,
            },
            bases=('service_request.requestform',),
        ),
        migrations.CreateModel(
            name='WaterPurifierRequest',
            fields=[
                ('requestform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_request.requestform')),
                ('purifier_type', models.CharField(max_length=100)),
                ('product_brand', models.CharField(choices=[('Kent', 'Kent'), ('Aquaguard', 'Aquaguard'), ('Pureit', 'Pureit'), ('Livpure', 'Livpure'), ('Blue Star', 'Blue Star')], max_length=100)),
                ('amc_years', models.PositiveIntegerField(choices=[(1, '1 Year'), (3, '3 Year')])),
            ],
            options={
                'abstract': False,
            },
            bases=('service_request.requestform',),
        ),
        migrations.AddField(
            model_name='requestform',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_request.customer'),
        ),
        migrations.AddField(
            model_name='requestform',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_request.productcategory'),
        ),
    ]
